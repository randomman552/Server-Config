- name: Install gitea
  become: true
  community.docker.docker_compose_v2:
    project_name: gitea
    definition:
      services:
        # Gitea
        server:
          image: gitea/gitea:latest-rootless
          restart: unless-stopped
          environment:
            GITEA__DATABASE__DB_TYPE: postgres
            GITEA__DATABASE__HOST: postgres:5432
            GITEA__DATABASE__NAME: "{{ gitea_postgres_database }}"
            GITEA__DATABASE__USER: "{{ gitea_postgres_username }}"
            GITEA__DATABASE__PASSWD: "{{ gitea_postgres_password }}"
            GITEA__SERVICE__DISABLE_REGISTRATION: true
            GITEA__MAILER__ENABLED: true
            GITEA__MAILER__SMTP_ADDR: "{{ gitea_smtp_host }}"
            GITEA__MAILER__SMTP_PORT: "{{ gitea_smtp_port }}"
            GITEA__MAILER__FROM: "{{ gitea_smtp_from }}"
            GITEA__MAILER__PROTOCOL: "{{ gitea_smtp_protocol }}"
            GITEA__MAILER__USER: "{{ gitea_smtp_username }}"
            GITEA__MAILER__PASSWD: "{{ gitea_smtp_password }}"
            GITEA__OPENID__ENABLE_OPENID_SIGNUP: false
            GITEA__OPENID__ENABLE_OPENID_SIGNIN: false
          volumes:
            - "{{ gitea_path }}/data:/var/lib/gitea"
            - "{{ gitea_path }}/config:/etc/gitea"
            - "/etc/timezone:/etc/timezone:ro"
            - "/etc/localtime:/etc/localtime:ro"
          ports:
            - "2222:2222"
          labels:
            traefik.enable: true
            traefik.http.services.gitea.loadbalancer.server.port: 3000
            traefik.http.routers.gitea.rule: Host(`{{ gitea_host }}`)
            traefik.http.routers.gitea.entrypoints: https

        # Database
        postgres:
          image: postgres:14
          restart: unless-stopped
          environment:
            POSTGRES_USER: "{{ gitea_postgres_username }}"
            POSTGRES_PASSWORD: "{{ gitea_postgres_password }}"
            POSTGRES_DB: "{{ gitea_postgres_database }}"
          volumes:
            - "{{ gitea_path }}/db:/var/lib/postgresql/data"
          healthcheck:
            test: ["CMD-SHELL", "pg_isready", "-d", "$$POSTGRES_DB"]
            interval: 30s
            timeout: 60s
            retries: 5
            start_period: 80s

        # Periodic database backups
        postgres-backup:
          image: prodrigestivill/postgres-backup-local:alpine
          restart: unless-stopped
          user: postgres:postgres
          environment:
            POSTGRES_USER: "{{ gitea_postgres_username }}"
            POSTGRES_PASSWORD: "{{ gitea_postgres_password }}"
            POSTGRES_DB: "{{ gitea_postgres_database }}"
            POSTGRES_HOST: postgres
          volumes:
            - "{{ gitea_path }}/backups:/backups"
          depends_on:
            - postgres
