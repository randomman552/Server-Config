version: "3"
services:
  # MySQL database
  db:
    image: mysql:8.0
    container_name: nextcloud-db
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    environment:
      MYSQL_USER: $DATABASE_USER
      MYSQL_PASSWORD: $DATABASE_PASSWORD
      MYSQL_DATABASE: $DATABASE_SCHEMA
      MYSQL_ROOT_PASSWORD: $DATABASE_ROOT_PASSWORD
    volumes:
      - ${NEXTCLOUD_HOME}/db:/var/lib/mysql
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', '$$MYSQL_USER', '--password=$$MYSQL_PASSWORD' ]
      interval: 5s
      timeout: 5s
      start_period: 5s
      retries: 5

  # Database backup
  db-backup:
    image: databack/mysql-backup
    container_name: nextcloud-db-backup
    restart: unless-stopped
    volumes:
      - ${NEXTCLOUD_HOME}/backup:/backup
    depends_on:
      - db
    environment:
      DB_SERVER: db
      DB_USER: root
      DB_PASS: $DATABASE_ROOT_PASSWORD
      DB_NAMES: $DATABASE_SCHEMA
      DB_DUMP_CRON: "0 0 * * *"

  # Redis for memcache
  redis:
    image: redis:alpine
    container_name: nextcloud-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s

  # Prometheus exporter
  nextcloud-exporter:
    image: xperimental/nextcloud-exporter
    container_name: nextcloud-exporter
    restart: unless-stopped
    environment:
      NEXTCLOUD_SERVER: https://$NEXTCLOUD_HOST
      NEXTCLOUD_AUTH_TOKEN: $NEXTCLOUD_METRICS_AUTH_TOKEN
    depends_on:
      - nextcloud
    labels:
      traefik.enable: true
      traefik.http.services.nextcloud.loadbalancer.server.port: 9205
      traefik.http.routers.nextcloud.rule: Host(`$NEXTCLOUD_HOST`) && PathPrefix(`/metrics`)
      traefik.http.routers.nextcloud.entrypoints: https
      traefik.http.routers.nextcloud.middlewares: local-whitelist, nextcloud-headers
      
  
  # Nextcloud application
  nextcloud:
    image: randomman552/nextcloud-ffmpeg:stable-apache
    container_name: nextcloud
    restart: unless-stopped
    volumes:
      - ${NEXTCLOUD_HOME}/html:/var/www/html
      - ${NEXTCLOUD_HOME}/data:/nextcloud-data
    environment:
      MYSQL_DATABASE: $DATABASE_SCHEMA
      MYSQL_USER: $DATABASE_USER
      MYSQL_PASSWORD: $DATABASE_PASSWORD
      MYSQL_HOST: db
      REDIS_HOST: redis
    depends_on:
      - db
      - redis
    labels:
      traefik.enable: true
      # Middleware
      traefik.http.middlewares.nextcloud-headers.headers.stsSeconds: 15552000
      traefik.http.middlewares.nextcloud-headers.headers.stsPreload: true
      traefik.http.middlewares.nextcloud-headers.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.nextcloud-webfinger.redirectregex.regex: https://(.*)/.well-known/(card|cal)dav
      traefik.http.middlewares.nextcloud-webfinger.redirectregex.replacement: https://$${1}/remote.php/dav/
      # Service
      traefik.http.services.nextcloud.loadbalancer.server.port: 80
      traefik.http.routers.nextcloud.rule: Host(`$NEXTCLOUD_HOST`)
      traefik.http.routers.nextcloud.entrypoints: https
      traefik.http.routers.nextcloud.middlewares: nextcloud-headers, nextcloud-webfinger
      # Homepage
      homepage.group: Tools
      homepage.name: Nextcloud
      homepage.icon: nextcloud
      homepage.href: https://$NEXTCLOUD_HOST
      homepage.description: Cloud storage and collaboration platform
  
  # Cron to execute periodic tasks on nextcloud
  cron:
    image: randomman552/nextcloud-ffmpeg:stable-apache
    restart: unless-stopped
    container_name: nextcloud-cron
    entrypoint: /cron.sh
    volumes:
      - ${NEXTCLOUD_HOME}/html:/var/www/html
      - ${NEXTCLOUD_HOME}/data:/nextcloud-data
    depends_on:
      - db
      - redis
  
  # Collabora
  collabora:
    image: collabora/code
    container_name: nextcloud-collabora
    restart: unless-stopped
    environment:
      username: $COLLABORA_USERNAME
      password: $COLLABORA_PASSWORD
      server_name: $COLLABORA_HOST
      domain: $NEXTCLOUD_HOST
      dictionaries: en_GB
      extra_params: --o:ssl.enable=false --o:ssl.termination=true
    cap_add:
      - MKNOD
    labels:
      traefik.enable: true
      traefik.http.services.collabora.loadbalancer.server.port: 9980
      traefik.http.routers.collabora.rule: Host(`$COLLABORA_HOST`)
      traefik.http.routers.collabora.entrypoints: https

  # Draw.io integration
  drawio:
    image: jgraph/drawio
    container_name: nextcloud-drawio
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=$DRAWIO_HOST
    labels:
      traefik.enable: true
      traefik.http.services.drawio.loadbalancer.server.port: 8080
      traefik.http.routers.drawio.rule: Host(`$DRAWIO_HOST`)
      traefik.http.routers.drawio.entrypoints: https
