services:
  # Server
  web:
    image: wger/server:latest
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    env_file:
      - stack.env
    volumes:
      - ${WGER_PATH}/static:/home/wger/static
      - ${WGER_PATH}/media:/home/wger/media
    expose:
      - 8000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000
      interval: 10s
      timeout: 5s
      start_period: 300s
      retries: 5
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    image: wger/server:latest
    command: /start-worker
    env_file:
      - stack.env
    volumes:
      - ${WGER_PATH}/media:/home/wger/media
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: celery -A wger inspect ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Celery Beat
  celery_beat:
    image: wger/server:latest
    command: /start-beat
    volumes:
      - ${WGER_PATH}/celery-beat:/home/wger/beat/
    env_file:
      - stack.env
    depends_on:
      celery_worker:
        condition: service_healthy

  # Web server
  nginx:
    image: nginx:stable
    depends_on:
      - web
    volumes:
      - ${WGER_PATH}/nginx.conf:/etc/nginx/conf.d/default.conf
      - ${WGER_PATH}/static:/wger/static:ro
      - ${WGER_PATH}/media:/wger/media:ro
    expose:
      - 80
    healthcheck:
      test: service nginx status
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.services.wger.loadbalancer.server.port: 80
      traefik.http.routers.wger.rule: Host(`$WGER_HOST`)
      traefik.http.routers.wger.entrypoints: https

  # Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=$DJANGO_DB_USER
      - POSTGRES_PASSWORD=$DJANGO_DB_PASSWORD
      - POSTGRES_DB=$DJANGO_DB_DATABASE
    volumes:
      - ${WGER_PATH}/postgres-data:/var/lib/postgresql/data/
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U wger
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Periodic database backups
  db-backup:
    image: prodrigestivill/postgres-backup-local:alpine
    restart: unless-stopped
    user: postgres:postgres
    environment:
      POSTGRES_USER: $DJANGO_DB_USER
      POSTGRES_PASSWORD: $DJANGO_DB_PASSWORD
      POSTGRES_HOST: db
      POSTGRES_DB: $DJANGO_DB_DATABASE
    volumes:
      - ${WGER_PATH}/postgres-backup:/backups
    depends_on:
      db:
        condition: service_healthy

  # Cache
  cache:
    image: redis
    expose:
      - 6379
    volumes:
      - ${WGER_PATH}/redis-data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

networks:
  default:
    name: wger_network