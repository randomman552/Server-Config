version: '3.8'
services:
  # Torrent
  deluge:
    image: linuxserver/deluge:latest
    container_name: servarr-deluge
    restart: unless-stopped
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: $UMASK
      TZ: ${TIMEZONE:-Europe/London}
      PASSWORD: $DELUGE_PASSWORD
    volumes:
      - ${SERVARR_HOME}/deluge/config:/config
      - ${MEDIA_HOME}/downloads:/media/downloads
    labels:
      traefik.enable: true
      traefik.http.services.deluge.loadbalancer.server.port: 8112
      traefik.http.routers.deluge.rule: Host(`${DELUGE_HOST}`)
      traefik.http.routers.deluge.entrypoints: https
      traefik.http.routers.deluge.middlewares: local-whitelist
      traefik.http.middlewares.local-whitelist.ipwhitelist.sourcerange: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
      homepage.group: Streaming
      homepage.name: Deluge
      homepage.icon: deluge
      homepage.href: https://$DELUGE_HOST
      homepage.description: Remote web-based BitTorrent client
      homepage.widget.type: deluge
      homepage.widget.url: https://$DELUGE_HOST
      homepage.widget.password: $DELUGE_PASSWORD
  
  # Indexer manager
  prowlarr:
    image: linuxserver/prowlarr:nightly
    container_name: servarr-prowlarr
    restart: unless-stopped
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: $UMASK
      TZ: ${TIMEZONE:-Europe/London}
    volumes:
      - ${SERVARR_HOME}/prowlarr/config:/config
      - ${MEDIA_HOME}:/media
    labels:
      traefik.enable: true
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
      traefik.http.routers.prowlarr.rule: Host(`${PROWLARR_HOST}`)
      traefik.http.routers.prowlarr.entrypoints: https
      traefik.http.routers.prowlarr.middlewares: local-whitelist, authentik-forwardauth
      traefik.http.middlewares.local-whitelist.ipwhitelist.sourcerange: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
      homepage.group: Streaming
      homepage.name: Prowlarr
      homepage.icon: prowlarr
      homepage.href: https://$PROWLARR_HOST
      homepage.description: Indexer manager for Servarr
      homepage.widget.type: prowlarr
      homepage.widget.url: https://$PROWLARR_HOST
      homepage.widget.key: $PROWLARR_API_KEY

  # Shows
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: servarr-sonarr
    restart: unless-stopped
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: $UMASK
      TZ: ${TIMEZONE:-Europe/London}
    volumes:
      - ${SERVARR_HOME}/sonarr/config:/config
      - ${MEDIA_HOME}:/media
    depends_on:
      - deluge
      - prowlarr
    labels:
      traefik.enable: true
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.http.routers.sonarr.rule: Host(`${SONARR_HOST}`)
      traefik.http.routers.sonarr.entrypoints: https
      traefik.http.routers.sonarr.middlewares: local-whitelist, authentik-forwardauth
      traefik.http.middlewares.local-whitelist.ipwhitelist.sourcerange: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
      homepage.group: Streaming
      homepage.name: Sonarr
      homepage.icon: sonarr
      homepage.href: https://$SONARR_HOST
      homepage.description: Series management
      homepage.widget.type: sonarr
      homepage.widget.url: https://$SONARR_HOST
      homepage.widget.key: $SONARR_API_KEY

  # Movies
  radarr:
    image: linuxserver/radarr:latest
    container_name: servarr-radarr
    restart: unless-stopped
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: $UMASK
      TZ: ${TIMEZONE:-Europe/London}
    volumes:
      - ${SERVARR_HOME}/radarr/config:/config
      - ${MEDIA_HOME}:/media
    depends_on:
      - deluge
      - prowlarr
    labels:
      traefik.enable: true
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.http.routers.radarr.rule: Host(`${RADARR_HOST}`)
      traefik.http.routers.radarr.entrypoints: https
      traefik.http.routers.radarr.middlewares: local-whitelist, authentik-forwardauth
      traefik.http.middlewares.local-whitelist.ipwhitelist.sourcerange: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
      homepage.group: Streaming
      homepage.name: Radarr
      homepage.icon: radarr
      homepage.href: https://$RADARR_HOST
      homepage.description: Movie management
      homepage.widget.type: radarr
      homepage.widget.url: https://$RADARR_HOST
      homepage.widget.key: $RADARR_API_KEY
      
  # Subtitles
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: servarr-bazarr
    restart: unless-stopped
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: $UMASK
      TZ: ${TIMEZONE:-Europe/London}
    volumes:
      - ${SERVARR_HOME}/bazarr/config:/config
      - ${MEDIA_HOME}:/media
    depends_on:
      - radarr
      - sonarr
    labels:
      traefik.enable: true
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
      traefik.http.routers.bazarr.rule: Host(`${BAZARR_HOST}`)
      traefik.http.routers.bazarr.entrypoints: https
      traefik.http.routers.bazarr.middlewares: local-whitelist, authentik-forwardauth
      traefik.http.middlewares.local-whitelist.ipwhitelist.sourcerange: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
      homepage.group: Streaming
      homepage.name: Bazarr
      homepage.icon: bazarr
      homepage.href: https://$BAZARR_HOST
      homepage.description: Subtitle management for Sonarr and Radarr
      homepage.widget.type: bazarr
      homepage.widget.url: https://$BAZARR_HOST
      homepage.widget.key: $BAZARR_API_KEY

  # Transcoding
  tdarr:
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    expose:
      - 8265:8265
      - 8266:8266
    environment:
      TZ: $TIMEZONE
      PUID: $PUID
      PGID: $PGID
      UMASK_SET: $UMASK
      serverIP: 0.0.0.0
      serverPort: 8266
      webUIPort: 8265
      internalNode: true
      inContainer: true
      nodeName: server-node
      NVIDIA_DRIVER_CAPABILITIES: all
      NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - ${SERVARR_HOME}/tdarr/server:/app/server
      - ${SERVARR_HOME}/tdarr/configs:/app/configs
      - ${SERVARR_HOME}/tdarr/logs:/app/logs
      - ${SERVARR_HOME}/tdarr/temp:/temp
      - ${MEDIA_HOME}:/media
    labels:
      traefik.enable: true
      traefik.http.services.tdarr.loadbalancer.server.port: 8265
      traefik.http.routers.tdarr.rule: Host(`${TDARR_HOST}`)
      traefik.http.routers.tdarr.entrypoints: https
      traefik.http.routers.tdarr.middlewares: local-whitelist

  # Content requests
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: servarr-jellyseerr
    restart: unless-stopped
    environment:
      TZ: Europe/London
    volumes:
      - ${SERVARR_HOME}/jellyseerr/config:/app/config
    labels:
      traefik.enable: true
      traefik.http.services.jellyseerr.loadbalancer.server.port: 5055
      traefik.http.routers.jellyseerr.rule: Host(`${JELLYSEERR_HOST}`)
      traefik.http.routers.jellyseerr.entrypoints: https
      traefik.http.routers.jellyseerr.middlewares: local-whitelist
      traefik.http.middlewares.local-whitelist.ipwhitelist.sourcerange: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
      homepage.group: Streaming
      homepage.name: Jellyseerr
      homepage.icon: jellyseerr
      homepage.href: https://$JELLYSEERR_HOST
      homepage.description: Content request system for Jellyfin