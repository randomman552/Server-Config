version: '3'
services:
  # Grafana
  grafana:
    image: grafana/grafana-oss:9.5.3
    restart: unless-stopped
    user: "1100"
    networks:
      - monitoring
    volumes:
      - $MONITORING_HOME/grafana:/var/lib/grafana
    environment:
      GF_SERVER_DOMAIN: $GRAFANA_HOST
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s"
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "authentik"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "$GRAFANA_AUTHENTIK_CLIENT_ID"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "$GRAFANA_AUTHENTIK_CLIENT_SECRET"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://$AUTHENTIK_HOST/application/o/authorize/"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://$AUTHENTIK_HOST/application/o/token/"
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://$AUTHENTIK_HOST/application/o/userinfo/"
      GF_AUTH_SIGNOUT_REDIRECT_URL: "https://$AUTHENTIK_HOST/application/o/grafana/end-session/"
      # Enable auto-login (bypasses Grafana login screen)
      GF_AUTH_OAUTH_AUTO_LOGIN: "true"
      # Map user groups to Grafana roles
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], '$GRAFANA_ADMIN_GROUP') && 'Admin' || contains(groups[*], '$GRAFANA_EDITOR_GROUP') && 'Editor' || 'Viewer'"
    labels:
      traefik.enable: true
      traefik.http.services.grafana.loadbalancer.server.port: 3000
      traefik.http.routers.grafana.rule: Host(`$GRAFANA_HOST`)
      traefik.http.routers.grafana.entrypoints: https
      homepage.group: Monitoring
      homepage.name: Grafana
      homepage.icon: grafana
      homepage.description: Dashboard monitoring software
      homepage.href: https://$GRAFANA_HOST
      
  # Prometeus data provider
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - $MONITORING_HOME/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - $MONITORING_HOME/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - monitoring
  
  # Influx
  influxdb:
    image: influxdb:2.7
    networks:
      - monitoring
    volumes:
      - $MONITORING_HOME/influx/config:/etc/influxdb2
      - $MONITORING_HOME/influx/data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 5s
      timeout: 10s
      retries: 20
    labels:
      traefik.enable: true
      traefik.http.services.influx.loadbalancer.server.port: 8086
      traefik.http.routers.influx.rule: Host(`$INFLUX_HOST`)
      traefik.http.routers.influx.entrypoints: https
      homepage.group: Monitoring
      homepage.name: InfluxDB
      homepage.icon: influx
      homepage.description: Dashboard monitoring software
      homepage.href: https://$INFLUX_HOST

  # Node information provider
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    network_mode: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  # Scrutiny
  scrutiny-web:
    image: 'ghcr.io/analogj/scrutiny:master-web'
    restart: unless-stopped
    privileged: true
    volumes:
      - $MONITORING_HOME/scrutiny/config:/opt/scrutiny/config
      - /run/udev:/run/udev:ro
    environment:
      SCRUTINY_WEB_INFLUXDB_HOST: 'influxdb'
      SCRUTINY_WEB_INFLUXDB_TOKEN: $SCRUTINY_INFLUXDB_TOKEN
      INFLUXDB_SCRUTINY_BUCKET_BASENAME: scrutiny-metrics
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 5s
      timeout: 10s
      retries: 20
      start_period: 10s
    labels:
      traefik.enable: true
      traefik.http.services.scrutiny.loadbalancer.server.port: 8080
      traefik.http.routers.scrutiny.rule: Host(`${SCRUTINY_HOST}`)
      traefik.http.routers.scrutiny.entrypoints: https
      traefik.http.routers.scrutiny.middlewares: local-whitelist
      homepage.group: Monitoring
      homepage.name: Scrutiny
      homepage.icon: scrutiny
      homepage.href: https://${SCRUTINY_HOST}
      homepage.description: Remote S.M.A.R.T monitoring software
      homepage.widget.type: scrutiny
      homepage.widget.url: https://${SCRUTINY_HOST}

  scrutiny-collector:
    image: 'ghcr.io/analogj/scrutiny:master-collector'
    cap_add:
      - SYS_RAWIO
    volumes:
      - '/run/udev:/run/udev:ro'
    environment:
      COLLECTOR_API_ENDPOINT: 'http://scrutiny-web:8080'
    depends_on:
      scrutiny-web:
        condition: service_healthy
    devices:
      - "/dev/sda"
      - "/dev/sdb"
networks:
  monitoring:
    driver: bridge