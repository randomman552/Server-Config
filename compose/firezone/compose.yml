x-deploy: &default-deploy
  restart_policy:
    condition: unless-stopped
    delay: 5s
    window: 120s
  update_config:
    order: start-first

version: '3.8'

services:
  firezone:
    image: firezone/firezone:latest
    ports:
      - ${WIREGUARD_PORT:-51820}:${WIREGUARD_PORT:-51820}/udp
    environment:
      EXTERNAL_URL: https://$FIREZONE_HOST
      DEFAULT_ADMIN_EMAIL: $FIREZONE_ADMIN_EMAIL
      DEFAULT_ADMIN_PASSWORD: $FIREZONE_ADMIN_PASSWORD
      GUARDIAN_SECRET_KEY: $FIREZONE_GUARDIAN_SECRET_KEY
      SECRET_KEY_BASE: $FIREZONE_SECRET_KEY_BASE
      LIVE_VIEW_SIGNING_SALT: $FIREZONE_VIEW_SIGNING_SALT
      COOKIE_SIGNING_SALT: $FIREZONE_COOKIE_SIGNING_SALT
      COOKIE_ENCRYPTION_SALT: $FIREZONE_COOKIE_ENCRYPTION_SALT
      DATABASE_ENCRYPTION_KEY: $FIREZONE_DATABASE_ENCRYPTION_KEY
      DATABASE_PASSWORD: $DATABASE_PASSWORD
      DATABASE_NAME: $DATABASE_NAME
      DATABASE_USER: $DATABASE_USER
      WIREGUARD_IPV4_NETWORK: 100.64.0.0/10
      WIREGUARD_IPV4_ADDRESS: 100.64.0.1
      WIREGUARD_IPV6_NETWORK: fd00::/106
      WIREGUARD_IPV6_ADDRESS: fd00::1
    volumes:
      - ${FIREZONE_HOME}/firezone:/var/firezone
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      # Needed for masquerading and NAT.
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
    depends_on:
      - postgres
    networks:
      firezone-network:
        ipv4_address: 172.25.0.100
        ipv6_address: fcff:3990:3990::99
    deploy:
      <<: *default-deploy
    labels:
      traefik.enable: true
      # Middleware
      traefik.http.middlewares.firezone-security.headers.customresponseheaders.X-XSS-Protection: 1; mode=block
      traefik.http.middlewares.firezone-security.headers.customresponseheaders.X-Content-Type-Options: nosniff
      traefik.http.middlewares.firezone-security.headers.customresponseheaders.Referrer-Policy: no-referrer-when-downgrade
      traefik.http.middlewares.firezone-security.headers.customresponseheaders.Content-Security-Policy: "default-src 'self' ws: wss: http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';"
      traefik.http.middlewares.firezone-security.headers.customresponseheaders.Permissions-Policy: interest-cohort=()
      traefik.http.middlewares.firezone-security.headers.customresponseheaders.X-Robots-Tag: noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex
      # Router
      traefik.http.services.firezone.loadbalancer.server.port: 13000
      traefik.http.routers.firezone.rule: Host(`$FIREZONE_HOST`)
      traefik.http.routers.firezone.entrypoints: https
      traefi.http.routers.firezone.middlewares: local-whitelist, firezone-security
      traefik.http.routers.firezone.tls: true

  postgres:
    image: postgres:15
    volumes:
      - ${FIREZONE_HOME}/database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-firezone}
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:?err}
    networks:
      - firezone-network
    deploy:
      <<: *default-deploy
      update_config:
        order: stop-first

networks:
  firezone-network:
    enable_ipv6: true
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
        - subnet: fcff:3990:3990::/64
          gateway: fcff:3990:3990::1