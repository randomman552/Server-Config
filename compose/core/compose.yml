version: '3'
services:
  # Traefik proxy to handle all container traffic
  traefik:
    image: traefik:latest
    container_name: traefik
    network_mode: host
    restart: always
    command:
      # Add docker as a provider
      - --providers.docker.watch=true
      - --providers.docker.exposedbydefault=false
      # Enable API dashboard
      - --api.dashboard=true
      # Certificate Resolver
      - --certificatesresolvers.letsencrypt.acme.email=$CLOUDFLARE_EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme.json
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      # HTTP entrypoint just re-directs to https
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entrypoint.to=https
      - --entrypoints.http.http.redirections.entrypoint.scheme=https
      # HTTPS entrypoint
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls=true
      - --entrypoints.https.http.tls.certResolver=letsencrypt
      - --entrypoints.https.http.tls.domains[0].main=$CLOUDFLARE_DOMAIN
      - --entrypoints.https.http.tls.domains[0].sans=*.$CLOUDFLARE_DOMAIN
      # Metrics
      - --metrics.prometheus=true
      - --metrics.prometheus.manualrouting=true
    environment:
      CLOUDFLARE_EMAIL: $CLOUDFLARE_EMAIL
      CLOUDFLARE_DNS_API_TOKEN: $CLOUDFLARE_DNS_API_TOKEN
    volumes:
      - ${TRAEFIK_HOME}/etc:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: true
      # Traefik dashboard router
      traefik.http.services.traefik.loadbalancer.server.port: 8080
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_HOST}`)
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.middlewares: local-whitelist@docker
      # Traefik prometheus metrics
      traefik.http.services.traefik-metrics.loadbalancer.server.port: 8080
      traefik.http.routers.traefik-metrics.rule: Host(`${TRAEFIK_HOST}`) && PathPrefix(`/metrics`)
      traefik.http.routers.traefik-metrics.entrypoints: https
      traefik.http.routers.traefik-metrics.service: prometheus@internal
      traefik.http.routers.traefik-metrics.middlewares: local-whitelist@docker
      # Local whitelist middleware
      traefik.http.middlewares.local-whitelist.ipwhitelist.sourcerange: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16

  # Portainer agent for remote management
  portainer-agent:
    image: portainer/agent:2.19.4
    restart: always
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
